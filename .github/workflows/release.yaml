name: Continuous Delivery
on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      org_name:
        description: 'The name of the npm organization to publish to'
        required: false
        default: 'actyoms'
        type: string
  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  continuous-integration:
    uses: ./.github/workflows/on-push.yaml
    secrets: inherit
  release:
    name: Release
    needs: continuous-integration
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: npm auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Semantic Version
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set Outputs
        id: outputs
        run: |
          echo version=$(cat package.json | jq -r '.version') >> $GITHUB_OUTPUT
          echo tag=$(cat package.json | jq -r '.version') >> $GITHUB_OUTPUT
          echo release_notes=$(cat release_notes.md) >> $GITHUB_OUTPUT
      - name: Commit
        shell: bash
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          # Create a tag for the release
          git tag -a ${{ steps.outputs.outputs.tag }} -m "Release ${{ steps.outputs.outputs.version }}" --allow-empty
          git push origin ${{ steps.outputs.outputs.tag }}
          # Unset release only changes
          git diff HEAD ${{ github.ref }} | git apply 
          git add --all
          git commit -m "Unset release only changes [skip ci]"
          git push origin HEAD:${{ github.ref }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.outputs.outputs.tag }}
          release_name: ${{ steps.outputs.outputs.version }}
          body: ${{ steps.outputs.outputs.release_notes }}
          draft: false
          prerelease: false
      - name: Npm Publish
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}